version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    networks:
      - app
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    networks:
      - app
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


#  mysql:
#    image: mysql:8.0
#    container_name: mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: password
#      MYSQL_DATABASE: my_db
#      MYSQL_USER: user
#      MYSQL_PASSWORD: password
#    ports:
#      - "4000:3306"
#    volumes:
#      - ./init:/docker-entrypoint-initdb.d
#      - mysql_data:/var/lib/mysql
#    networks:
#      - app


  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "4000:3306"
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    networks:
      - app

  kafdrop:
    image: obsidiandynamics/kafdrop
    networks:
      - app
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
    depends_on:
      - kafka

  flask-app:
    build:
      context: ./producer
    image: producer
    networks:
      - app
    ports:
      - "5001:5001"

    depends_on:
      - kafka

  consumers:
    build:
      context: ./consumer
    image: consumer
    networks:
      - app
    ports:
      - "5002:5002"

    depends_on:
      - kafka



volumes:
  mysql_data:

networks:
  app:
    driver: bridge
